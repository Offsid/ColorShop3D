// Android Resolver Repos Start
([rootProject] + (rootProject.subprojects as List)).each { project ->
    project.repositories {
        def unityProjectPath = $/file:////Users/gordanaristova/CrazyLabsProjects/ColorShop3D/ColorShop3D/$.replace("\\", "/")
        maven {
            url "https://maven.google.com"
        }
        maven {
            url "https://s3.amazonaws.com/com.tabtale.repo/android/maven/backup" // Assets/Editor/TTPDependencies.xml:15
        }
        maven {
            url "https://s3.amazonaws.com/com.tabtale.repo/android/maven/ttplugins" // Assets/Editor/TTPDependencies.xml:15
        }
        maven {
            url "https://s3.amazonaws.com/com.tabtale.repo/android/maven/thirdparty" // Assets/Editor/TTPDependencies.xml:15
        }
        maven {
            url "https://s3.amazonaws.com/moat-sdk-builds" // Assets/Editor/TTPDependencies.xml:15
        }
        maven {
            url "https://maven.ogury.co" // Assets/Editor/TTPDependencies.xml:15
        }
        maven {
            url "https://android-sdk.is.com" // Assets/Editor/TTPDependencies.xml:15
        }
        maven {
            url "https://dl-maven-android.mintegral.com/repository/mbridge_android_sdk_oversea" // Assets/Editor/TTPDependencies.xml:15
        }
        maven {
            url "https://jitpack.io" // Assets/Editor/TTPDependencies.xml:15
        }
        maven {
            url "https://mvnrepository.com/artifact/com.inmobi.monetization/inmobi-ads" // Assets/Editor/TTPDependencies.xml:15
        }
        maven {
            url "https://artifact.bytedance.com/repository/pangle" // Assets/Editor/TTPDependencies.xml:15
        }
        mavenLocal()
        mavenCentral()
    }
}
// Android Resolver Repos End
apply plugin: 'com.android.library'


dependencies {
    implementation project('AndroidConfigurations.androidlib')
    implementation fileTree(dir: 'libs', include: ['*.jar'])
// Android Resolver Dependencies Start
    implementation 'com.tabtale.tt_plugins.android:TT_Plugins_Analytics:4.2.0.1.2' // Assets/Editor/TTPDependencies.xml:21
    implementation 'com.tabtale.tt_plugins.android:TT_Plugins_AppsFlyer:4.2.0.3.1' // Assets/Editor/TTPDependencies.xml:18
    implementation 'com.tabtale.tt_plugins.android:TT_Plugins_Core:4.2.0.5.1' // Assets/Editor/TTPDependencies.xml:16
    implementation 'com.tabtale.tt_plugins.android:TT_Plugins_CrashTool:0.0.0.0.63' // Assets/Editor/TTPDependencies.xml:19
    implementation 'com.tabtale.tt_plugins.android:TT_Plugins_FirebaseAgent:4.2.0.1.2' // Assets/Editor/TTPDependencies.xml:22
    implementation 'com.tabtale.tt_plugins.android:TT_Plugins_Privacy_Settings:0.0.0.0.438' // Assets/Editor/TTPDependencies.xml:20
    implementation 'com.tabtale.tt_plugins.android:TT_Plugins_Remote_Config:0.0.0.0.43' // Assets/Editor/TTPDependencies.xml:23
    implementation 'com.tabtale.tt_plugins.android:TT_Plugins_Unity:3.8.0.0.1' // Assets/Editor/TTPDependencies.xml:17
// Android Resolver Dependencies End

}

// Android Resolver Exclusions Start
android {
  packagingOptions {
      exclude ('/lib/arm64-v8a/*' + '*')
      exclude ('/lib/armeabi/*' + '*')
      exclude ('/lib/mips/*' + '*')
      exclude ('/lib/mips64/*' + '*')
      exclude ('/lib/x86/*' + '*')
      exclude ('/lib/x86_64/*' + '*')
  }
}
// Android Resolver Exclusions End
android {
    compileSdkVersion 31
    buildToolsVersion '30.0.2'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 31
        ndk {
            abiFilters 'armeabi-v7a'
        }
        versionCode 1
        versionName '0.1'
        consumerProguardFiles 'proguard-unity.txt'
    }

    lintOptions {
        abortOnError false
    }

    aaptOptions {
        noCompress = ['.unity3d', '.ress', '.resource', '.obb', '.bundle', '.unityexp'] + unityStreamingAssets.tokenize(', ')
        ignoreAssetsPattern = "!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~"
    }

    packagingOptions {
        doNotStrip '*/armeabi-v7a/*.so'
    }
}



